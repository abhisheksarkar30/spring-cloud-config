name: Build, Test & Deploy workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main # branch name for kubernetes app
    paths-ignore:
      - '**/*.md'
      - '**/.gitignore'
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile, test & Package config-server
        run: mvn clean package -f ./config-server/pom.xml

      - name: Compile, test & Package limits-service
        run: mvn clean package -f ./limits-service/pom.xml

      - name: SonarCloud analysis & QualityGate checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=abhisheksarkar30_spring-cloud-config -Dsonar.qualitygate.wait=true -f ./limits-service/pom.xml

      - name: Jacoco coverage limits
        run: mvn org.jacoco:jacoco-maven-plugin:check@limit -f ./limits-service/pom.xml

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Upload containers
        run: docker compose build --push
        
  call-pull-deploy-workflow:
    needs: build-push
    strategy:
      matrix:
        target-vms: [ rog-vm, desk-vm ]
    uses: ./.github/workflows/actions-deploy.yml
    with:
      target-vm: ${{ matrix.target-vms }} # will create separate jobs, one for each of the labels in {{ target-vms }}